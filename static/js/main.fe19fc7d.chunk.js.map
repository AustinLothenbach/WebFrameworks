{"version":3,"sources":["TodoForm.js","Todo.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","className","onChange","target","Todo","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","color","text","onClick","App","todos","setTodos","newTodos","splice","map","key","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAwBiBA,MAtBjB,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,mBAAS,IADR,mBACpBC,EADoB,KACbC,EADa,KAU3B,OACE,0BAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,OAKP,2BACEI,KAAK,OACLC,UAAU,QACVN,MAAOA,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,YCE1BS,MAhBjB,YAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WACvC,OACE,yBACEP,UAAU,OACVQ,MAAO,CAAEC,eAAgBL,EAAKM,YAAc,eAAiB,GAAIC,MAAOP,EAAKM,YAAc,MAAQ,SAElGN,EAAKQ,KAEN,6BACE,4BAAQC,QAAS,kBAAMP,EAAaD,KAApC,YACA,4BAAQQ,QAAS,kBAAMN,EAAWF,KAAlC,Q,MCiDKS,MAxDf,WAAgB,IAAD,EAGgBrB,mBAAS,CACpC,CACEmB,KAAM,oBACNF,aAAa,GAEf,CACEE,KAAM,wBACNF,aAAa,GAEf,CACEE,KAAM,6BACNF,aAAa,KAdJ,mBAGHK,EAHG,KAGIC,EAHJ,KAwBPV,EAAe,SAAAD,GACnB,IAAMY,EAAQ,YAAOF,GACrBE,EAASZ,GAAOK,aAAc,EAC9BM,EAASC,IAGLV,EAAa,SAAAF,GACjB,IAAMY,EAAQ,YAAOF,GACrBE,EAASC,OAAOb,EAAO,GACvBW,EAASC,IAIX,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACZe,EAAMI,KAAI,SAACf,EAAMC,GAAP,OACT,kBAAC,EAAD,CACEe,IAAKf,EACLA,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,OAGhB,yBAAKP,UAAU,aAAY,kBAAC,EAAD,CAAUR,QA9B3B,SAAAoB,GACd,IAAMK,EAAQ,sBAAOF,GAAP,CAAc,CAAEH,UAC9BI,EAASC,MA4BoD,8BACzD,yBAAKjB,UAAU,aAAae,EAAMM,QAAO,SAAAjB,GAAI,OAAKA,EAAKM,eAAaY,OAApE,kBCjDRC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.fe19fc7d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction TodoForm({ addTodo }) {\n    const [value, setValue] = useState(\"\");\n  \n    const handleSubmit = e => {\n      e.preventDefault();\n      if (!value) return;\n      addTodo(value);\n      setValue(\"\");\n    };\n  \n    return (\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={e => setValue(e.target.value)}\n        />\n      </form>\n    );\n  }\n\n  export default TodoForm;","import React from \"react\";\n\n// added in-line text styling, was unsure on how to do toggling with the completeTodo function\n\nfunction Todo({ todo, index, completeTodo, removeTodo }) {\n    return (\n      <div\n        className=\"todo\"\n        style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\", color: todo.isCompleted ? \"red\" : \"blue\"}}\n      >\n        {todo.text}\n  \n        <div>\n          <button onClick={() => completeTodo(index)}>Complete</button>\n          <button onClick={() => removeTodo(index)}>X</button>\n        </div>\n      </div>\n    );\n  }\n\n  export default Todo;","import React, { useState } from \"react\";\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nimport \"./App.css\";\n\n\nfunction App() {\n\n\n     const [todos, setTodos] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  // added a completed count-down! \n  return (\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n          />\n        ))}\n        <div className=\"formInput\"><TodoForm addTodo={addTodo} /><br /></div>\n        <div className=\"countdown\">{todos.filter(todo => !todo.isCompleted).length} left to do</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// should be only one ReactDOM.render (optional) method in your app\n// React.StrictMode checks for possible issues with your codebase\n// https://reactjs.org/docs/strict-mode.html\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}